create table if not exists users
(
    id         bigint generated by default as identity
        constraint users_pkey primary key,
    email      varchar(255) not null unique,
    username   varchar(255) not null unique,
    password   varchar(255) not null,
    first_name varchar(255),
    last_name  varchar(255),
    enabled    boolean default false
);

create table if not exists roles
(
    id   bigint generated by default as identity
        constraint roles_pkey primary key,
    title varchar(255) not null unique
);

create table if not exists permissions
(
    id   bigint generated by default as identity
        constraint permissions_pkey primary key,
    title varchar(255) not null unique
);

create table if not exists roles_permissions
(
    role_id       bigint references roles (id),
    permission_id bigint references permissions (id),
    constraint role_permission primary key (role_id, permission_id)
);

create table if not exists users_roles
(
    user_id bigint references users (id),
    role_id bigint references roles (id),
    constraint user_role primary key (user_id, role_id)
);

insert into users (email, username, password, enabled)
values ('evreke@gmail.com', 'evreke', '$2a$10$rVNT3D2toEW7BcHT3mnE4eqpLS9g9b/KfdM8uHeK3unQsJxvXnh8K', true),
       ('', 'alex', '$2a$10$hNqJaXPcgyGgrCHkgbFcG.39RCmcVrJpzO5PnXSl7DyHdtFFCLxXy', true)
on conflict do nothing;

insert into permissions (title)
values ('administer')
on conflict do nothing;

insert into roles (title)
values ('admin'),
       ('user')
on conflict do nothing;

insert into users_roles
values (1, 1),
       (2, 2)
on conflict do nothing;
